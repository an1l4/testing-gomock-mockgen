// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/an1l4/testing-gomock-mockgen/doer (interfaces: Doer)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDoer is a mock of Doer interface.
type MockDoer struct {
	ctrl     *gomock.Controller
	recorder *MockDoerMockRecorder
}

// MockDoerMockRecorder is the mock recorder for MockDoer.
type MockDoerMockRecorder struct {
	mock *MockDoer
}

// NewMockDoer creates a new mock instance.
func NewMockDoer(ctrl *gomock.Controller) *MockDoer {
	mock := &MockDoer{ctrl: ctrl}
	mock.recorder = &MockDoerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDoer) EXPECT() *MockDoerMockRecorder {
	return m.recorder
}

// DoSometing mocks base method.
func (m *MockDoer) DoSometing(arg0 int, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DoSometing", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DoSometing indicates an expected call of DoSometing.
func (mr *MockDoerMockRecorder) DoSometing(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoSometing", reflect.TypeOf((*MockDoer)(nil).DoSometing), arg0, arg1)
}
